# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: create mods and its sources
        run: ./gradlew build
      - name: capture and upload mods and its sources
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from the latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: modJars
          path: build/libs/
      - name: create a release to upload the mods
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          tag="${{ github.event.inputs.version }}"
          git tag "$tag"
          git push origin "$tag"
          gh release create "$tag" \
            --title "${{ github.event.inputs.title }}" \
            --notes "${{ github.event.inputs.description }}" \
            build/libs/modJars
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
